/**
 * Auto generated from en-translation with 'translation-manager'
 * You CAN edit this file, it would be read again and compared, but remember it would be sorted automatically
 */
export const ruTranslations = {
  abac: {
    backToApp: "Go back to the app",
    email: "Email",
    emailAddres: "Email address",
    emailAddress: "Email address",
    firstName: "First name",
    lastName: "Last name",
    otpOrDifferent: "Or try a different account instead",
    otpResetMethod: "Reset method",
    otpTitle: "One time password",
    otpTitleHint: "Login to your account via a 6-8 digit pins, which we will\n    send by phone or email. You can change your password later\n    in account center.",
    password: "Password",
    remember: "Remember my credentials",
    signin: "Signin",
    signout: "Signout",
    signup: "Signup",
    signupType: "Signup Type",
    signupTypeHint: "Select how do you want to use software",
    viaEmail: "Send pin via email address",
    viaSms: "Phone number (SMS)",
  },
  about: "TRANSLATION_KEY_MISSING",
  acChecks: {
    moduleName: "Checks",
  },
  acbankbranches: {
    acBankArchiveTitle: "Bank Branches",
    acBankBranchArchiveTitle: "Bank Branches",
    bank: "Bank",
    bankHint: "The bank that this branch belongs to",
    bankId: "Bank",
    city: "City",
    cityHint: "City that this bank branch is located",
    cityId: "City",
    editAcBank: "Edit Bank Branch",
    editAcBankBranch: "Edit Bank Branch",
    locaitonHint: "Physical location of the branch",
    location: "Location",
    name: "Bank Branch Name",
    nameHint: "The branch name of the bank, town may be included",
    newAcBank: "New Bank Branch",
    newAcBankBranch: "New Bank Branch",
    province: "Province",
    provinceHint: "Province that this bank branch is located",
    provinceId: "Province",
    provinceIdHint: "Province that this bank branch is located",
  },
  acbanks: {
    acBankArchiveTitle: "Banks",
    editAcBank: "Edit Bank",
    name: "Bank name",
    nameHint: "The national name of the bank to make it easier recognize",
    newAcBank: "New Bank",
  },
  accesibility: {
    leftHand: "Left handed",
    rightHand: "Right handed",
  },
  accheck: {
    acCheckArchiveTitle: "چک ها",
  },
  acchecks: {
    acCheckArchiveTitle: "چک ها",
    amount: "Amount",
    amountFormatted: "Amount",
    amountHint: "Amount of this check",
    bankBranch: "Bank Branch",
    bankBranchCityName: "City name",
    bankBranchHint: "The branch which has issued this check",
    bankBranchId: "Bank Branch",
    bankBranchName: "Branch name",
    currency: "Currency",
    currencyHint: "The currency which this check is written in",
    customer: "Customer",
    customerHint: "The customer that this check is from or belongs to",
    customerId: "Customer",
    dueDate: "Due Date",
    dueDateFormatted: "Due Date",
    dueDateHint: "The date that this check should be passed",
    editAcCheck: "ویرایش چک",
    identifier: "Identifier",
    identifierHint: "Identifier is special code for this check or unique id",
    issueDate: "Issue date",
    issueDateFormatted: "Issue Date",
    issueDateHint: "The date that check has been issued",
    newAcCheck: "چک جدید",
    recipientBankBranch: "Recipient Bank Branch",
    recipientBankBranchHint: "The bank which this check has been taken to",
    recipientCustomer: "Recipient Customer",
    recipientCustomerHint: "The customer who has this check",
    status: "Status",
    statusHint: "The status of this check",
  },
  accheckstatuses: {
    acCheckStatusArchiveTitle: "Check Statuses",
    editAcCheckStatus: "Edit Check Status",
    name: "Status Name",
    nameHint: "Status name which will be assigned to a check in workflow",
    newAcCheckStatus: "New Check Status",
  },
  accountcollections: {
    archiveTitle: "Edit",
    children: "children",
    childrenHint: "children Hint",
    editAccountCollection: "Edit",
    name: "name",
    nameHint: "name Hint",
    newAccountCollection: "Edit",
    translations: "translations",
    translationsHint: "translations Hint",
  },
  accounting: {
    account: {
      currency: "TRANSLATION_KEY_MISSING",
      name: "TRANSLATION_KEY_MISSING",
    },
    accountCollections: "Account Collections",
    accountCollectionsHint: "Account Collections",
    amount: "TRANSLATION_KEY_MISSING",
    legalUnit: {
      name: "TRANSLATION_KEY_MISSING",
    },
    settlementDate: "TRANSLATION_KEY_MISSING",
    summary: "TRANSLATION_KEY_MISSING",
    title: "TRANSLATION_KEY_MISSING",
    transactionDate: "TRANSLATION_KEY_MISSING",
  },
  actions: {
    addJob: "TRANSLATION_KEY_MISSING",
    back: "Back",
    edit: "Edit",
    new: "New",
  },
  addLocation: "Add location",
  alreadyHaveAnAccount: "TRANSLATION_KEY_MISSING",
  answerSheet: {
    grammarProgress: "TRANSLATION_KEY_MISSING",
    listeningProgress: "TRANSLATION_KEY_MISSING",
    readingProgress: "TRANSLATION_KEY_MISSING",
    sourceExam: "TRANSLATION_KEY_MISSING",
    speakingProgress: "TRANSLATION_KEY_MISSING",
    takerFullname: "TRANSLATION_KEY_MISSING",
    writingProgress: "TRANSLATION_KEY_MISSING",
  },
  authenticatedOnly: "TRANSLATION_KEY_MISSING",
  b1PolishSample: {
    b12018: "2018 B1 Sample",
    grammar: "Grammar",
    listenning: "Listenning",
    reading: "Reading",
    speaking: "Speaking",
    writing: "Writing",
  },
  backup: {
    generateAndDownload: "Generate & Download",
    generateDescription: "You can create a backup of the system here. It's important to remember\n    you will generate back from data which are visible to you. Making\n    backups must be done using administrative accounts to ensure coverage\n    for all data available in system",
    generateTitle: "Generate Backup",
    restoreDescription: "You can here import backup files into the system, or data that you\n    have migrated from another installation",
    restoreTitle: "Restore Backups",
    uploadAndRestore: "Update & Restore",
  },
  banks: {
    title: "Banks",
  },
  classroom: {
    classRoomName: "TRANSLATION_KEY_MISSING",
    classRoomNameHint: "TRANSLATION_KEY_MISSING",
    description: "TRANSLATION_KEY_MISSING",
    descriptionHint: "TRANSLATION_KEY_MISSING",
    editClassRoom: "TRANSLATION_KEY_MISSING",
    gogoleMeetUrlHint: "TRANSLATION_KEY_MISSING",
    googleMeetUrl: "TRANSLATION_KEY_MISSING",
    members: "TRANSLATION_KEY_MISSING",
    membersHint: "TRANSLATION_KEY_MISSING",
    newClassroom: "TRANSLATION_KEY_MISSING",
    provider: "TRANSLATION_KEY_MISSING",
    providerHint: "TRANSLATION_KEY_MISSING",
    providers: {
      googleMeet: "TRANSLATION_KEY_MISSING",
      zoom: "TRANSLATION_KEY_MISSING",
    },
    title: "TRANSLATION_KEY_MISSING",
  },
  close: "TRANSLATION_KEY_MISSING",
  cloudProjects: {
    clientId: "TRANSLATION_KEY_MISSING",
    name: "TRANSLATION_KEY_MISSING",
    secret: "TRANSLATION_KEY_MISSING",
  },
  common: {
    cancel: "TRANSLATION_KEY_MISSING",
    no: "No",
    noaccess: "TRANSLATION_KEY_MISSING",
    parent: "Parent Record",
    parentHint: "Select the parent entity which this belogns to",
    save: "TRANSLATION_KEY_MISSING",
    yes: "Yes",
  },
  commonProfile: {},
  confirm: "Confirm",
  continue: "Continue",
  controlsheets: {
    active: "Active",
    archiveTitle: "Control Sheets",
    editControlSheet: "Edit Control SHeet",
    inactive: "Inactive",
    isRunning: "Running",
    name: "Name",
    nameHint: "Name Hint",
    newControlSheet: "New Control Sheet",
  },
  course: {
    availableCourses: "TRANSLATION_KEY_MISSING",
    courseDescription: "TRANSLATION_KEY_MISSING",
    courseDescriptionHint: "TRANSLATION_KEY_MISSING",
    courseExcerpt: "TRANSLATION_KEY_MISSING",
    courseExcerptHint: "TRANSLATION_KEY_MISSING",
    courseId: "Course Id",
    courseTitle: "TRANSLATION_KEY_MISSING",
    courseTitleHint: "TRANSLATION_KEY_MISSING",
    editCourse: "TRANSLATION_KEY_MISSING",
    myCourses: "TRANSLATION_KEY_MISSING",
    name: "Ali",
    newCourse: "TRANSLATION_KEY_MISSING",
    noCourseAvailable: "TRANSLATION_KEY_MISSING",
    noCourseEnrolled: "TRANSLATION_KEY_MISSING",
    title: "TRANSLATION_KEY_MISSING",
  },
  createAccount: "TRANSLATION_KEY_MISSING",
  created: "TRANSLATION_KEY_MISSING",
  currentUser: {
    editProfile: "TRANSLATION_KEY_MISSING",
    profile: "TRANSLATION_KEY_MISSING",
    signin: "TRANSLATION_KEY_MISSING",
    signout: "TRANSLATION_KEY_MISSING",
  },
  dashboards: "Dashboards",
  datanodes: {
    addReader: "Add Reader",
    addWriter: "Add Writer",
    archiveTitle: "Data Nodes",
    dataType: "Data Type",
    expanderFunction: "Expander function",
    expanderFunctionHint: "How to cast the content into value array",
    filePath: "File Path",
    filePathHint: "File address on the system",
    key: "Data key",
    keyHint: "Data key is the sub key of a data node",
    keyReadable: "Readable",
    keyReadableHint: "If this sub key is readable",
    keyWritable: "Writable",
    keyWritableHint: "If this sub key is writable",
    modbusRtuAddress: "Address",
    modbusRtuAddressHint: "Address",
    modbusRtuDataBits: "DataBits",
    modbusRtuDataBitsHint: "DataBits",
    modbusRtuParity: "Parity",
    modbusRtuParityHint: "Parity",
    modbusRtuSlaveId: "SlaveId",
    modbusRtuSlaveIdHint: "SlaveId",
    modbusRtuStopBits: "StopBits",
    modbusRtuStopBitsHint: "StopBits",
    modbusRtuTimeout: "Timeout",
    modbusRtuTimeoutHint: "Timeout",
    modbusTcpHost: "Host",
    modbusTcpHostHint: "Host",
    modbusTcpPort: "Port",
    modbusTcpPortHint: "Port",
    modbusTcpSlaveId: "Slave id",
    modbusTcpSlaveIdHint: "Slave id",
    modbusTcpTimeout: "Timeout",
    modbusTcpTimeoutHint: "Timeout",
    mode: "Mode",
    modeHint: "The node data mode",
    mqttBody: "MQTT Body",
    mqttBodyHInt: "The body of the message (string or json) which will be sent",
    mqttTopic: "MQTT Topic",
    mqttTopicHint: "The topic which will be broadcasted",
    nodeReader: "Node Reader",
    nodeReaderConfig: "Node Config",
    nodeReaderConfigHint: "Configurate how this node will be read",
    nodeReaderHint: "Select the Reader which will write data into the node",
    nodeWriter: "Node Writer",
    nodeWriterHint: "Select the Writer which will write data into the node",
    serialPort: "SerialPort",
    serialPortHint: "Select the serial port that data will be written to",
    type: "Data Type",
    typeHint: "The type of data that this node holds or transmits",
    udpHost: "Host",
    udpHostHint: "UDP Host Address",
    udpPort: "Port",
    udpPortHint: "UDP Port Number",
  },
  datepicker: {
    day: "Day",
    month: "Month",
    year: "Year",
  },
  debugInfo: "Show debug information",
  deleteAction: "TRANSLATION_KEY_MISSING",
  deleteConfirmMessage: "Are you sure to delete the selected items?",
  deleteConfirmation: "TRANSLATION_KEY_MISSING",
  devices: {
    deviceModbusConfig: "Device Modbus Config",
    deviceModbusConfigHint: "Configuration for device in modbus",
    devicetemplateArchiveTitle: "Devices",
    editDevice: "Edit Device",
    ip: "IP",
    ipHint: "Device IP v4 Address",
    model: "Model",
    modelHint: "Device model number",
    name: "Device Name",
    nameHint: "Device name to recognize this easier later",
    newDevice: "New Device",
    securityType: "Security Type",
    securityTypeHint: "The authentication method for wireless network",
    type: "Type",
    typeHint: "Device Type",
    typeId: "Type",
    typeIdHint: "The type of the device",
    wifiPassword: "Wifi Password",
    wifiPasswordHint: "Wifi Password",
    wifiSSID: "Wifi SSID",
    wifiSSIDHint: "Wifi SSID",
  },
  devicetype: {
    archiveTitle: "Edit",
    editDeviceType: "Edit",
    name: "name",
    nameHint: "name Hint",
    newDeviceType: "Edit",
    translations: "translations",
    translationsHint: "translations Hint",
  },
  diagram: "Diagram",
  drive: {
    attachFile: "Attach file",
    driveTitle: "Drive",
    menu: "TRANSLATION_KEY_MISSING",
    name: "Name",
    size: "TRANSLATION_KEY_MISSING",
    title: "TRANSLATION_KEY_MISSING",
    type: "TRANSLATION_KEY_MISSING",
    viewPath: "View Path",
    virtualPath: "TRANSLATION_KEY_MISSING",
  },
  dropNFiles: "TRANSLATION_KEY_MISSING",
  edit: "Edit",
  errors: {
    UNKOWN_ERRROR: "Unknown error occured",
  },
  exam: {
    startInstruction: "TRANSLATION_KEY_MISSING",
    startNew: "TRANSLATION_KEY_MISSING",
    title: "TRANSLATION_KEY_MISSING",
  },
  examProgress: {
    grammarProgress: "TRANSLATION_KEY_MISSING",
    listeningProgress: "TRANSLATION_KEY_MISSING",
    readingProgress: "TRANSLATION_KEY_MISSING",
    speakingProgress: "TRANSLATION_KEY_MISSING",
    writingProgress: "TRANSLATION_KEY_MISSING",
  },
  examSession: {
    err1: "TRANSLATION_KEY_MISSING",
    highlightMissing: "TRANSLATION_KEY_MISSING",
    showAnswers: "TRANSLATION_KEY_MISSING",
  },
  fb: {
    commonProfile: "TRANSLATION_KEY_MISSING",
    editMailProvider: "TRANSLATION_KEY_MISSING",
    editMailSender: "TRANSLATION_KEY_MISSING",
    editPublicJoinKey: "TRANSLATION_KEY_MISSING",
    editRole: "TRANSLATION_KEY_MISSING",
    editWorkspaceType: "Edit Workspace Type",
    newMailProvider: "TRANSLATION_KEY_MISSING",
    newMailSender: "TRANSLATION_KEY_MISSING",
    newPublicJoinKey: "TRANSLATION_KEY_MISSING",
    newRole: "TRANSLATION_KEY_MISSING",
    newWorkspaceType: "New Workspace Type",
    publicJoinKey: "TRANSLATION_KEY_MISSING",
  },
  fbMenu: {
    emailProvider: "TRANSLATION_KEY_MISSING",
    emailProviders: "TRANSLATION_KEY_MISSING",
    emailSender: "TRANSLATION_KEY_MISSING",
    emailSenders: "TRANSLATION_KEY_MISSING",
    gsmProvider: "GSM Provider",
    keyboardShortcuts: "TRANSLATION_KEY_MISSING",
    myInvitations: "TRANSLATION_KEY_MISSING",
    publicJoinKey: "TRANSLATION_KEY_MISSING",
    roles: "TRANSLATION_KEY_MISSING",
    title: "TRANSLATION_KEY_MISSING",
    users: "TRANSLATION_KEY_MISSING",
    workspaceInvites: "TRANSLATION_KEY_MISSING",
    workspaceTypes: "Workspace Types",
    workspaces: "TRANSLATION_KEY_MISSING",
  },
  featureNotAvailableOnMock: "Not available on the mock server. The version you are using is basically a demo, and runs without a real server. Things are not being saved, or do not represent a real flow.",
  financeMenu: {
    accountName: "TRANSLATION_KEY_MISSING",
    accountNameHint: "TRANSLATION_KEY_MISSING",
    amount: "TRANSLATION_KEY_MISSING",
    amountHint: "TRANSLATION_KEY_MISSING",
    currency: "TRANSLATION_KEY_MISSING",
    currencyHint: "TRANSLATION_KEY_MISSING",
    editPaymentRequest: "TRANSLATION_KEY_MISSING",
    editVirtualAccount: "TRANSLATION_KEY_MISSING",
    newPaymentRequest: "TRANSLATION_KEY_MISSING",
    newVirtualAccount: "TRANSLATION_KEY_MISSING",
    paymentMethod: "TRANSLATION_KEY_MISSING",
    paymentMethodHint: "TRANSLATION_KEY_MISSING",
    paymentRequest: "TRANSLATION_KEY_MISSING",
    paymentRequests: "TRANSLATION_KEY_MISSING",
    paymentStatus: "TRANSLATION_KEY_MISSING",
    subject: "TRANSLATION_KEY_MISSING",
    summary: "TRANSLATION_KEY_MISSING",
    title: "TRANSLATION_KEY_MISSING",
    transaction: {
      amount: "Amount",
      subject: "Subject",
      summary: "Summary",
    },
    virtualAccount: "TRANSLATION_KEY_MISSING",
    virtualAccountHint: "TRANSLATION_KEY_MISSING",
    virtualAccounts: "TRANSLATION_KEY_MISSING",
  },
  firstTime: "TRANSLATION_KEY_MISSING",
  flowvalues: {
    archiveTitle: "Data History",
    connectionId: "Connection Id",
    connectionIdHint: "Value of the specific connection",
    editFlowValue: "Edit Flow Value",
    newFlowValue: "New Flow Value",
    report: "Report",
    valueFloat: "Float Value",
    valueFloatHint: "Floating point value",
    valueInt: "Int Value",
    valueIntHint: "Numeric value",
    valueString: "String Value",
    valueStringHint: "String value",
    valueType: "Value Type",
    valueTypeHint: "Type of the value which has been saved",
  },
  forcedLayout: {
    forcedLayoutGeneralMessage: "TRANSLATION_KEY_MISSING",
  },
  forgotPassword: "TRANSLATION_KEY_MISSING",
  generalSettings: {
    accessibility: {
      description: "Manage how you want to edit textual content in the app",
      title: "Text Editor",
    },
    debugSettings: {
      description: "TRANSLATION_KEY_MISSING",
      title: "TRANSLATION_KEY_MISSING",
    },
    grpcMethod: "TRANSLATION_KEY_MISSING",
    hostAddress: "TRANSLATION_KEY_MISSING",
    httpMethod: "TRANSLATION_KEY_MISSING",
    interfaceLang: {
      description: "TRANSLATION_KEY_MISSING",
      title: "TRANSLATION_KEY_MISSING",
    },
    port: "TRANSLATION_KEY_MISSING",
    remoteDescripton: "TRANSLATION_KEY_MISSING",
    remoteTitle: "TRANSLATION_KEY_MISSING",
    richTextEditor: {
      description: "TRANSLATION_KEY_MISSING",
      title: "TRANSLATION_KEY_MISSING",
    },
    theme: {
      description: "TRANSLATION_KEY_MISSING",
      title: "TRANSLATION_KEY_MISSING",
    },
  },
  geo: {
    geocities: {
      country: "Country",
      countryHint: "The country that this city is located",
      editGeoCity: "Edit City",
      geoCityArchiveTitle: "Cities",
      menu: "Cities",
      name: "City name",
      nameHint: "City name",
      newGeoCity: "New City",
      province: "Province",
      provinceHint: "The province that this city is located",
    },
    geocountries: {
      editGeoCountry: "Edit Country",
      geoCountryArchiveTitle: "Countries",
      menu: "Countries",
      name: "Country name",
      nameHint: "Country name",
      newGeoCountry: "New Country",
    },
    geoprovinces: {
      country: "Country",
      editGeoProvince: "Edit Province",
      geoProvinceArchiveTitle: "Provinces",
      menu: "Provinces",
      name: "Province name",
      nameHint: "Province name",
      newGeoProvince: "New Province",
    },
    lat: "Latitude",
    lng: "Longitute",
    menu: "Geo Tools",
  },
  geolocations: {
    archiveTitle: "Edit",
    children: "children",
    childrenHint: "children Hint",
    code: "code",
    codeHint: "code Hint",
    editGeoLocation: "Edit",
    flag: "flag",
    flagHint: "flag Hint",
    name: "name",
    nameHint: "name Hint",
    newGeoLocation: "Edit",
    officialName: "officialName",
    officialNameHint: "officialName Hint",
    status: "status",
    statusHint: "status Hint",
    translations: "translations",
    translationsHint: "translations Hint",
    type: "type",
    typeHint: "type Hint",
    typeId: "typeId",
    typeIdHint: "typeId Hint",
  },
  gpiomodes: {
    archiveTitle: "Gpio Modes",
    description: "Description",
    descriptionHint: "More details about gpio mode",
    editGpioMode: "Edit Gpio Mode",
    index: "Index",
    indexHint: "Numeric Index",
    key: "Numeric Key",
    keyHint: "Numeric Key",
    newGpioMode: "New Gpio Mode",
  },
  gpios: {
    analogFunction: "Analog Function",
    analogFunctionHint: "Analog function information",
    archiveTitle: "Gpios",
    comments: "Comments",
    commentsHint: "More details or information about GPIO",
    editGpio: "Edit Gpio",
    index: "Gpio Numeric Index",
    indexHint: "The number of the GPIO (Pin number)",
    modeId: "ModeId",
    modeIdHint: "The mode of gpio to be used when device starts",
    name: "Gpio Name",
    nameHint: "Name of the GPIO, e.g. GPIO_1",
    newGpio: "New Gpio",
    rtcGpio: "RTC Gpio",
    rtcGpioHint: "RTC Gpio information",
  },
  gpiostates: {
    archiveTitle: "Gpio State",
    editGpioState: "Edit Gpio State",
    gpio: "GPIO",
    gpioHint: "Select the GPIO from list. Index will be selected from there",
    gpioMode: "Mode",
    gpioModeHint: "Select the mode which this pin will be configurated",
    high: "High (On)",
    low: "Low (Off)",
    newGpioState: "New Gpio State",
    value: "Value",
    valueHint: "The current state of the pin",
  },
  gsmprovider: {
    editGsmProvider: "Edit GSM Provider",
    newGsmProvider: "New GSM Provider",
  },
  gsmproviders: {
    apiKey: "API Key",
    apiKeyHint: "Api key is the access token for sending messages",
    editGsmProvider: "Edit GSM Provider",
    gsmProviderArchiveTitle: "GSM Providers",
    invokeBody: "Invoke Body",
    invokeBodyHint: "The Post body that will be send to the api ",
    invokeUrl: "Invoke url",
    invokeUrlHint: "The URL of the thirdparty service to send text messages",
    mainSenderNumber: "Sender Number",
    mainSenderNumberHint: "The phone number which will be used to send text messages",
    newGsmProvider: "New GSM Provider",
    terminal: "Terminal",
    type: "Type",
    typeHint: "Type of the gsm provider (different options may be available)",
    url: "Webservice",
  },
  hmi: {
    archiveTitle: "Hmis",
    editHmi: "Edit Hmi",
    name: "Hmi Name",
    nameHint: "Name of the hmi to recognize",
    newHmi: "New Hmi",
  },
  hmiComponents: {
    archiveTitle: "Hmi Components",
    editHmiComponent: "Edit HmiComponent",
    hmi: "hmi",
    hmiHint: "hmi Hint",
    hmiId: "hmiId",
    hmiIdHint: "hmiId Hint",
    icon: "icon",
    iconHint: "icon Hint",
    label: "label",
    labelHint: "label Hint",
    layoutMode: "layoutMode",
    layoutModeHint: "layoutMode Hint",
    newHmiComponent: "New HmiComponent",
    position: "position",
    positionHint: "position Hint",
    read: "read",
    readHint: "read Hint",
    readId: "readId",
    readIdHint: "readId Hint",
    states: "states",
    statesHint: "states Hint",
    type: "type",
    typeHint: "type Hint",
    write: "write",
    writeHint: "write Hint",
    writeId: "writeId",
    writeIdHint: "writeId Hint",
  },
  hmicomponents: {
    archiveTitle: "Hmi Components",
    editHmiComponent: "Edit HmiComponent",
    hmi: "hmi",
    hmiHint: "hmi Hint",
    hmiId: "hmiId",
    hmiIdHint: "hmiId Hint",
    icon: "icon",
    iconHint: "icon Hint",
    label: "label",
    labelHint: "label Hint",
    layoutMode: "layoutMode",
    layoutModeHint: "layoutMode Hint",
    newHmiComponent: "New HmiComponent",
    noComponents: "There are no components on this hmi screen. Add them using + icon to begin monitoring and controlling",
    position: "position",
    positionHint: "position Hint",
    read: "read",
    readHint: "read Hint",
    readId: "readId",
    readIdHint: "readId Hint",
    states: "states",
    statesHint: "states Hint",
    type: "type",
    typeHint: "type Hint",
    write: "write",
    writeHint: "write Hint",
    writeId: "writeId",
    writeIdHint: "writeId Hint",
  },
  hmis: {
    archiveTitle: "Hmis",
    editHmi: "Edit Hmi",
    name: "Hmi Name",
    nameHint: "Name of the hmi to recognize",
    newHmi: "New Hmi",
  },
  home: {
    line1: "TRANSLATION_KEY_MISSING",
    line2: "TRANSLATION_KEY_MISSING",
    title: "TRANSLATION_KEY_MISSING",
  },
  intacodes: {
    description: "",
    descriptionHint: "",
    editIntacode: "",
    intacodeArchiveTitle: "Intacodes",
    margin: "",
    marginHint: "",
    newIntacode: "",
    note: "",
    noteHint: "",
    year: "",
    yearHint: "",
  },
  invite: {
    createInvitation: "TRANSLATION_KEY_MISSING",
    editInvitation: "TRANSLATION_KEY_MISSING",
    email: "TRANSLATION_KEY_MISSING",
    emailHint: "TRANSLATION_KEY_MISSING",
    firstName: "TRANSLATION_KEY_MISSING",
    firstNameHint: "TRANSLATION_KEY_MISSING",
    forcePassport: "TRANSLATION_KEY_MISSING",
    lastName: "TRANSLATION_KEY_MISSING",
    lastNameHint: "TRANSLATION_KEY_MISSING",
    phoneNumber: "TRANSLATION_KEY_MISSING",
    phoneNumberHint: "TRANSLATION_KEY_MISSING",
    role: "TRANSLATION_KEY_MISSING",
    roleHint: "TRANSLATION_KEY_MISSING",
    xxxx: "TRANSLATION_KEY_MISSING",
  },
  iot: {
    dataNodeDatum: "Data Node History",
    dataNodeName: "Data node name",
    dataNodeNameHint: "Data node is a data type name, for recognition among the app",
    dataNodes: "Data nodes",
    editDataNode: "Edit Data Node",
    ingestedAt: "Ingested At",
    newDataNode: "New Data Node",
    title: "IOT",
    valueFloat64: "Value Float64",
    valueInt64: "Value Int64",
    valueString: "Value String",
  },
  jalaliMonths: {
    "0": "فروردین",
    "1": "اردیبهشت",
    "2": "خرداد",
    "3": "تیر",
    "4": "مرداد",
    "5": "شهریور",
    "6": "مهر",
    "7": "آبان",
    "8": "آذر",
    "9": "دی",
    "10": "بهمن",
    "11": "اسفند",
  },
  jobsList: {
    completionDate: "TRANSLATION_KEY_MISSING",
    consumerId: "TRANSLATION_KEY_MISSING",
    ingestedAt: "Ingested At",
    projectCode: "TRANSLATION_KEY_MISSING",
    projectName: "TRANSLATION_KEY_MISSING",
    result: "TRANSLATION_KEY_MISSING",
    status: "TRANSLATION_KEY_MISSING",
    submissionDate: "TRANSLATION_KEY_MISSING",
  },
  katexPlugin: {
    body: "Formula",
    cancel: "Cancel",
    insert: "Insert",
    title: "Katex Plugin",
    toolbarName: "Insert Formula",
  },
  keyboardShortcut: {
    action: "Action",
    defaultBinding: "Default Key Binding",
    keyboardShortcut: "TRANSLATION_KEY_MISSING",
    pressToDefine: "Press to define",
    userDefinedBinding: "User Defined Bindings",
  },
  lackOfPermission: "TRANSLATION_KEY_MISSING",
  learningMenu: {
    answerSheets: "TRANSLATION_KEY_MISSING",
    enrolledCourses: "TRANSLATION_KEY_MISSING",
    myClassRooms: "TRANSLATION_KEY_MISSING",
    myCourses: "TRANSLATION_KEY_MISSING",
    myExams: "TRANSLATION_KEY_MISSING",
    practiseBoard: "TRANSLATION_KEY_MISSING",
    title: "TRANSLATION_KEY_MISSING",
  },
  licenses: {
    activationKeySeries: "TRANSLATION_KEY_MISSING",
    activationKeys: "TRANSLATION_KEY_MISSING",
    code: "Code",
    duration: "TRANSLATION_KEY_MISSING",
    durationHint: "TRANSLATION_KEY_MISSING",
    editActivationKey: "TRANSLATION_KEY_MISSING",
    editLicensableProduct: "TRANSLATION_KEY_MISSING",
    editLicense: "TRANSLATION_KEY_MISSING",
    editProductPlan: "TRANSLATION_KEY_MISSING",
    endDate: "End Date",
    licensableProducts: "TRANSLATION_KEY_MISSING",
    licenseName: "TRANSLATION_KEY_MISSING",
    licenseNameHint: "TRANSLATION_KEY_MISSING",
    licenses: "TRANSLATION_KEY_MISSING",
    menuActivationKey: "TRANSLATION_KEY_MISSING",
    menuLicenses: "TRANSLATION_KEY_MISSING",
    menuProductPlans: "TRANSLATION_KEY_MISSING",
    menuProducts: "TRANSLATION_KEY_MISSING",
    newActivationKey: "TRANSLATION_KEY_MISSING",
    newLicensableProduct: "TRANSLATION_KEY_MISSING",
    newLicense: "TRANSLATION_KEY_MISSING",
    newProductPlan: "TRANSLATION_KEY_MISSING",
    planName: "TRANSLATION_KEY_MISSING",
    planNameHint: "TRANSLATION_KEY_MISSING",
    planProductName: "TRANSLATION_KEY_MISSING",
    planProductNameHint: "TRANSLATION_KEY_MISSING",
    privateKey: "TRANSLATION_KEY_MISSING",
    privateKeyHint: "TRANSLATION_KEY_MISSING",
    productName: "TRANSLATION_KEY_MISSING",
    productNameHint: "TRANSLATION_KEY_MISSING",
    productPlanName: "TRANSLATION_KEY_MISSING",
    productPlanNameHint: "TRANSLATION_KEY_MISSING",
    productPlans: "TRANSLATION_KEY_MISSING",
    publicKey: "TRANSLATION_KEY_MISSING",
    publicKeyHint: "TRANSLATION_KEY_MISSING",
    series: "TRANSLATION_KEY_MISSING",
    seriesHint: "TRANSLATION_KEY_MISSING",
    startDate: "Start Date",
  },
  locale: {
    englishWorldwide: "English (Worldwide)",
    persianIran: "Persian (Iran)",
    polishPoland: "Polish (Polski)",
  },
  loginButton: "TRANSLATION_KEY_MISSING",
  loginButtonOs: "TRANSLATION_KEY_MISSING",
  loyalty: {
    addContactPerson: "Add contact",
    business: {
      name: "Business name",
      nameHint: "Business name",
      taxNumber: "Tax number",
      taxNumberHint: "Tax number",
    },
    customerContacts: "Contact numbers",
    customerGeneralInfo: "General Information",
    customerLocations: "Customer Locations",
    customerType: "Customer Type",
    customerTypeHint: "Form content depends on the customer type",
    customers: "Customers",
    editLoyaltyCustomer: "Edit customer information",
    emailAddress: "Email Address",
    firstName: "First name",
    firstNameHint: "Customer first name",
    fullAddress: "Full address",
    fullAddressHint: "Full address of the company",
    fullName: "Full name",
    lastName: "Last name",
    lastNameHint: "Customer last name",
    meetingNote: "Meeting note",
    meetingNoteHint: "Write how did you meet this client, as a note for future",
    menu: "Loyalty",
    nationalId: "National Id",
    nationalIdHint: "National Id of the customer",
    newLoyaltyCustomer: "New Customer",
    noCustomerData: "There are no customer data at all to show here.",
    note: "Note",
    noteHint: "A note about this customer, (visible to everyone in this workspace)",
    phoneNumber: "Phone number",
    phoneNumberHint: "User Phone number",
  },
  mailProvider: {
    apiKey: "TRANSLATION_KEY_MISSING",
    apiKeyHint: "The API key related to the mail service provider, if applicable",
    fromEmailAddress: "TRANSLATION_KEY_MISSING",
    fromEmailAddressHint: "TRANSLATION_KEY_MISSING",
    fromName: "TRANSLATION_KEY_MISSING",
    fromNameHint: "TRANSLATION_KEY_MISSING",
    nickName: "TRANSLATION_KEY_MISSING",
    nickNameHint: "TRANSLATION_KEY_MISSING",
    replyTo: "TRANSLATION_KEY_MISSING",
    replyToHint: "TRANSLATION_KEY_MISSING",
    senderAddress: "TRANSLATION_KEY_MISSING",
    senderName: "TRANSLATION_KEY_MISSING",
    type: "TRANSLATION_KEY_MISSING",
    typeHint: "Select the mail provider from list. Under the list you can find all providers we support.",
  },
  menu: {
    answerSheets: "TRANSLATION_KEY_MISSING",
    classRooms: "TRANSLATION_KEY_MISSING",
    courses: "TRANSLATION_KEY_MISSING",
    exams: "TRANSLATION_KEY_MISSING",
    personal: "TRANSLATION_KEY_MISSING",
    questionBanks: "TRANSLATION_KEY_MISSING",
    questions: "TRANSLATION_KEY_MISSING",
    quizzes: "TRANSLATION_KEY_MISSING",
    settings: "TRANSLATION_KEY_MISSING",
    title: "TRANSLATION_KEY_MISSING",
    units: "TRANSLATION_KEY_MISSING",
  },
  meta: {
    titleAffix: "TRANSLATION_KEY_MISSING",
  },
  misc: {
    currencies: "Currencies",
    currency: {
      editCurrency: "Edit currency",
      name: "Name",
      nameHint: "Name of the currrency",
      newCurrency: "New currency",
      symbol: "Symbol",
      symbolHint: "Symbol of the currency, usually the unicode character",
      symbolNative: "Symbol Native",
      symbolNativeHint: "The symbol of the currency, which is used in the local country",
    },
    title: "Misc",
  },
  mockNotice: "This is a demo version of the app. There is no backend, nothing is being stored, or should not work properly",
  modbusconnectiontypes: {
    archiveTitle: "Connection Types",
    editModbusConnectionType: "Edit Connection Type",
    name: "Connection Type Name",
    nameHint: "The name of protocol which could be used for connection",
    newModbusConnectionType: "New Connection Type",
  },
  modbusfunctioncodes: {
    archiveTitle: "Modbus Functions",
    code: "Numeric Code",
    codeHint: "The function numeric code for reading the function",
    editModbusFunctionCode: "Edit Modbus Function",
    name: "Function name",
    nameHint: "The name of the function",
    newModbusFunctionCode: "New Modbus Function",
  },
  modbustasks: {
    archiveTitle: "Modbus Tasks",
    connectionType: "Connection Type",
    connectionTypeHint: "Modbus Connection Type",
    device: "Device",
    deviceHint: "Device that this modbus task belongs to",
    editModbusTask: "Edit Modbus Task",
    functionCode: "Function Code",
    functionCodeHint: "Modbus Function Code",
    length: "Length",
    lengthHint: "Message Length",
    modbusId: "Modbus Id",
    modbusIdHint: "Modbus Id",
    name: "Task name",
    nameHint: "Name the modbus task",
    newModbusTask: "New Modus Task",
    range: "Range",
    rangeHint: "Range",
    readInterval: "Read Interval",
    readIntervalHint: "Read Interval Hint",
    register: "Register",
    registerHint: "The register which this modbus will read it",
    variableType: "Variable Type",
    variableTypeHint: "Variable Type",
    writeInterval: "Write Interval",
    writeIntervalHint: "Write Interval",
  },
  modbusvariabletypes: {
    archiveTitle: "Modbus Variables",
    editModbusVariableType: "Edit Modbus Variable",
    name: "Variable Name",
    nameHint: "The human readable of the variable",
    newModbusVariableType: "New Modbus Variable",
  },
  mqttconfigs: {
    archiveTitle: "Edit",
    autoReconnect: "autoReconnect",
    autoReconnectHint: "autoReconnect Hint",
    cleanSession: "cleanSession",
    cleanSessionHint: "cleanSession Hint",
    clientId: "clientId",
    clientIdHint: "clientId Hint",
    connectTimeout: "connectTimeout",
    connectTimeoutHint: "connectTimeout Hint",
    editMqttConfig: "Edit",
    host: "host",
    hostHint: "host Hint",
    keepAlive: "keepAlive",
    keepAliveHint: "keepAlive Hint",
    lastWillPayload: "lastWillPayload",
    lastWillPayloadHint: "lastWillPayload Hint",
    lastWillQos: "lastWillQos",
    lastWillQosHint: "lastWillQos Hint",
    lastWillRetain: "lastWillRetain",
    lastWillRetainHint: "lastWillRetain Hint",
    lastWillTopic: "lastWillTopic",
    lastWillTopicHint: "lastWillTopic Hint",
    mqttVersion: "mqttVersion",
    mqttVersionHint: "mqttVersion Hint",
    name: "name",
    nameHint: "name Hint",
    newMqttConfig: "Edit",
    password: "password",
    passwordHint: "password Hint",
    port: "port",
    portHint: "port Hint",
    ssl: "ssl",
    sslHint: "ssl Hint",
    username: "username",
    usernameHint: "username Hint",
  },
  mqttconnections: {
    archiveTitle: "Edit",
    autoReconnect: "autoReconnect",
    autoReconnectHint: "autoReconnect Hint",
    cleanSession: "cleanSession",
    cleanSessionHint: "cleanSession Hint",
    clientId: "clientId",
    clientIdHint: "clientId Hint",
    connectTimeout: "connectTimeout",
    connectTimeoutHint: "connectTimeout Hint",
    editMqttConnection: "Edit",
    host: "host",
    hostHint: "host Hint",
    keepAlive: "keepAlive",
    keepAliveHint: "keepAlive Hint",
    lastWillPayload: "lastWillPayload",
    lastWillPayloadHint: "lastWillPayload Hint",
    lastWillQos: "lastWillQos",
    lastWillQosHint: "lastWillQos Hint",
    lastWillRetain: "lastWillRetain",
    lastWillRetainHint: "lastWillRetain Hint",
    lastWillTopic: "lastWillTopic",
    lastWillTopicHint: "lastWillTopic Hint",
    mqttVersion: "mqttVersion",
    mqttVersionHint: "mqttVersion Hint",
    mqttVersionId: "mqttVersionId",
    mqttVersionIdHint: "mqttVersionId Hint",
    name: "name",
    nameHint: "name Hint",
    newMqttConnection: "Edit",
    parent: "parent",
    parentHint: "parent Hint",
    password: "password",
    passwordHint: "password Hint",
    port: "port",
    portHint: "port Hint",
    ssl: "ssl",
    sslHint: "ssl Hint",
    username: "username",
    usernameHint: "username Hint",
  },
  myClassrooms: {
    availableClassrooms: "TRANSLATION_KEY_MISSING",
    noCoursesAvailable: "TRANSLATION_KEY_MISSING",
    title: "TRANSLATION_KEY_MISSING",
    youHaveNoClasses: "TRANSLATION_KEY_MISSING",
  },
  networkError: "TRANSLATION_KEY_MISSING",
  noOptions: "No Options",
  noPendingInvite: "There are no pending invitation for you.",
  noSignupType: "Creating account is not available now. Contact the administration",
  node: {
    Oddeven: "Odd/even",
    average: "Average",
    circularInput: "Radial",
    color: "Color",
    containerLevelValue: "Container",
    cron: "Cron",
    delay: "Delay",
    digital: "Digital",
    interpolate: "Interpolate",
    run: "Run",
    source: "Source",
    start: "Start",
    stop: "Stop",
    switch: "Switch",
    target: "Target",
    timer: "Timer",
    value: "Value",
    valueGauge: "Gague",
  },
  not_found_404: "The page you are looking for might have been removed, its URL changed or is temporarily unavailable.",
  notfound: "Resource you are looking for is not available on this version of the api.",
  pages: {
    catalog: "TRANSLATION_KEY_MISSING",
    feedback: "TRANSLATION_KEY_MISSING",
    jobs: "TRANSLATION_KEY_MISSING",
  },
  payments: {
    approve: "Approve",
    reject: "Reject",
  },
  priceTag: {
    add: "Add price variation",
    priceTag: "Price Tag",
    priceTagHint: "Definition of the price in different regions, when user wants to purchase",
  },
  question: {
    editQuestion: "TRANSLATION_KEY_MISSING",
    newQuestion: "TRANSLATION_KEY_MISSING",
  },
  questionBank: {
    editEntity: "TRANSLATION_KEY_MISSING",
    editQuestion: "TRANSLATION_KEY_MISSING",
    name: "Bank name",
    newEntity: "TRANSLATION_KEY_MISSING",
    newQuestion: "TRANSLATION_KEY_MISSING",
    title: "TRANSLATION_KEY_MISSING",
    titleHint: "TRANSLATION_KEY_MISSING",
  },
  questionSemester: {
    editQuestionSemester: "Edit Question Semester",
    editSchoolType: "Edit Question Semester",
    menu: "Question Semesters",
    name: "School Name",
    nameHint: "Question Semester usually indicates which month the question was used",
    newQuestionSemester: "New Question Semester",
    newSchoolType: "New Question Semester",
    questionSemesterArchiveTitle: "Question Semesters",
    schoolTypeTitle: "Question Semesters",
  },
  questionlevels: {
    editQuestionLevel: "Edit Question Level",
    name: "Quesiton Level",
    nameHint: "Define the level which could be used in question section",
    newQuestionLevel: "New Question Level",
    questionLevelArchiveTitle: "Question Levels",
  },
  questions: {
    addAnswerHint: "Click to add a new answer to question",
    addQuestion: "Add Question",
    answer: "Answer",
    answerHint: "One of possible answers or the only one",
    durationInSeconds: "Answer time in seconds",
    durationInSecondsHint: "The amount of time student has to answer this question",
    province: "Province",
    provinceHint: "Choose the provinces that this question belonged to",
    question: "Question",
    questionBank: "Question bank",
    questionBankHint: "The question bank which question belongs to",
    questionDifficulityLevel: "Difficulity level",
    questionDifficulityLevelHint: "How hard is this question for students to answer",
    questionLevel: "Question level",
    questionLevelHint: "Question level coutry-wise, is provincial, etc.",
    questionSchoolType: "School Type",
    questionSchoolTypeHint: "The type of the school that this question belongs to",
    questionSemester: "Question Semester",
    questionSemesterHint: "When this question has appeared (in which semester)",
    questionTitle: "Question title",
    questionTitleHint: "Question title is the main question that someone should give answer to",
    questions: "Questions",
    studyYear: "سال تحصیلی",
    studyYearHint: "سال تحصیلی که این سوال وارد شده است",
  },
  quiz: {
    editQuiz: "TRANSLATION_KEY_MISSING",
    name: "Name",
    newQuiz: "TRANSLATION_KEY_MISSING",
  },
  reactiveSearch: {
    noResults: "There are no results :)",
    placeholder: "Search (Press S)...",
  },
  requestReset: "TRANSLATION_KEY_MISSING",
  resume: {
    clientLocation: "Client Location:",
    companyLocation: "Company Location:",
    jobCountry: "Country that I did the job:",
    keySkills: "Key Skills",
    level: "Level",
    level_1: "Explorer",
    level_2: "Medium",
    level_3: "Common User",
    level_4: "Advanced",
    level_5: "Architect",
    noScreenMessage1: "Welcome to this resume. If you are seeing PDF Version, it might be long to\n      read all. Please visit",
    noScreenMessage2: "and you can modify this content easily, sort, remove technical or general\n    description. Also you can see live examples, and videos I have prepared.",
    preferredPositions: "Preferred Positions",
    products: "Products",
    projectDescription: "Project Description",
    projects: "Projects",
    services: "Services",
    showDescription: "Show Description",
    showTechnicalInfo: "Show Technical Information",
    skillDuration: "Skill Duration",
    skillName: "Skill Name",
    technicalDescription: "Technical Description",
    usage: "Usage",
    usage_1: "Randomly",
    usage_2: "Often",
    usage_3: "Common uage",
    usage_4: "Advanced",
    usage_5: "Frequent",
    videos: "Videos",
    years: "Years",
  },
  role: {
    name: "TRANSLATION_KEY_MISSING",
    permissions: "Permissions",
  },
  saveChanges: "TRANSLATION_KEY_MISSING",
  scenariolanguages: {
    archiveTitle: "Edit Scenario Language",
    editScenarioLanguage: "Edit",
    name: "name",
    nameHint: "name Hint",
    newScenarioLanguage: "Edit",
    scenarioLanguagetemplateArchiveTitle: "Edit",
  },
  scenariooperationtypes: {
    archiveTitle: "Operation Types",
    editScenarioOperationType: "Edit Operation Type",
    name: "Operation Type Name",
    nameHint: "Name of the operation type",
    newScenarioOperationType: "New Operation Type",
  },
  scenarios: {
    archiveTitle: "Scenarios",
    editScenario: "Edit Scenario",
    lammerSequences: "Lammer Sequence",
    lammerSequencesHint: "Define the scenario operation in lammer language",
    name: "Scenario Name",
    nameHint: "Name of the scenario when starting it",
    newScenario: "New Scenario",
    script: "Script",
    scriptHint: "Script that should run when scenario starts",
  },
  schooltypes: {
    editSchoolType: "Edit School Type",
    menu: "School Types",
    name: "School Name",
    nameHint: "School type general name which people recognize",
    newSchoolType: "New School Type",
    schoolTypeTitle: "School Types",
  },
  searchplaceholder: "Search...",
  selectPlaceholder: "- Select an option -",
  settings: {
    apply: "TRANSLATION_KEY_MISSING",
    inaccessibleRemote: "In accessible remote.",
    interfaceLanguage: "TRANSLATION_KEY_MISSING",
    interfaceLanguageHint: "TRANSLATION_KEY_MISSING",
    preferredHand: "Prefered hand",
    preferredHandHint: "Select which hand you are most often using phone so some options would be closer to your primary hand",
    remoteAddress: "Remote address",
    serverConnected: "Server is connected successfully",
    textEditorModule: "TRANSLATION_KEY_MISSING",
    textEditorModuleHint: "TRANSLATION_KEY_MISSING",
    theme: "TRANSLATION_KEY_MISSING",
    themeHint: "TRANSLATION_KEY_MISSING",
  },
  signinInstead: "TRANSLATION_KEY_MISSING",
  signup: {
    continueAs: "TRANSLATION_KEY_MISSING",
    continueAsHint: "TRANSLATION_KEY_MISSING",
    defaultDescription: "TRANSLATION_KEY_MISSING",
    mobileAuthentication: "In order to login with mobile",
    signupToWorkspace: "TRANSLATION_KEY_MISSING",
  },
  signupButton: "TRANSLATION_KEY_MISSING",
  simpleTextEditor: "System simple text editor",
  studentExams: {
    history: "TRANSLATION_KEY_MISSING",
    noExams: "TRANSLATION_KEY_MISSING",
    noHistory: "TRANSLATION_KEY_MISSING",
    title: "TRANSLATION_KEY_MISSING",
  },
  studentRooms: {
    title: "TRANSLATION_KEY_MISSING",
  },
  studyYears: {
    editStudyYear: "Edit Study Year",
    name: "Name",
    nameHint: "The study year, for example 2019-2020",
    newStudyYear: "New Study Year",
    studyYearArchiveTitle: "Study Years",
  },
  table: {
    created: "Created",
    filter: {
      contains: "Contains",
      endsWith: "Ends With",
      equal: "Equal",
      filterPlaceholder: "Filter...",
      greaterThan: "Greater Than",
      greaterThanOrEqual: "Greater or equal",
      lessThan: "Less Than",
      lessThanOrEqual: "Less or equal",
      notContains: "Not Contains",
      notEqual: "Not Equal",
      startsWith: "Starts With",
    },
    info: "Info",
    next: "Next",
    noRecords: "TRANSLATION_KEY_MISSING",
    previous: "Previous",
    uniqueId: "TRANSLATION_KEY_MISSING",
    value: "Value",
  },
  tempControlWidget: {
    decrese: "Decrease",
    increase: "Increase",
  },
  tinymceeditor: "TinyMCE Editor",
  triggers: {
    archiveTitle: "Triggers",
    editTrigger: "Edit Trigger",
    name: "Trigger Name",
    nameHint: "Name the trigger to find it easier",
    newTrigger: "New Trigger",
    triggerType: "Trigger Type",
    triggerTypeCronjob: "Trigger Cronjob",
    triggerTypeCronjobHint: "Define the trigger cronjob",
    triggerTypeGpioValue: "Trigger Gpio Value",
    triggerTypeGpioValueHint: "Trigger on change for gpio value",
    triggerTypeHint: "Kind of the trigger",
    triggerTypeId: "Trigger Type",
    triggerTypeIdHint: "Kind of the trigger",
  },
  triggertypes: {
    archiveTitle: "Edit",
    editTriggerType: "Edit",
    name: "name",
    nameHint: "name Hint",
    newTriggerType: "Edit",
    translations: "translations",
    translationsHint: "translations Hint",
    triggerTypetemplateArchiveTitle: "Edit",
  },
  tuyaDevices: {
    cloudProjectId: "TRANSLATION_KEY_MISSING",
    name: "TRANSLATION_KEY_MISSING",
  },
  unit: {
    editUnit: "TRANSLATION_KEY_MISSING",
    newUnit: "TRANSLATION_KEY_MISSING",
    title: "TRANSLATION_KEY_MISSING",
  },
  units: {
    content: "Content",
    editUnit: "TRANSLATION_KEY_MISSING",
    newUnit: "TRANSLATION_KEY_MISSING",
    parentId: "Parent Id",
    subUnits: "Sub units",
  },
  unnamedRole: "TRANSLATION_KEY_MISSING",
  unnamedWorkspace: "TRANSLATION_KEY_MISSING",
  user: {
    editUser: "TRANSLATION_KEY_MISSING",
    newUser: "TRANSLATION_KEY_MISSING",
  },
  users: {
    firstName: "TRANSLATION_KEY_MISSING",
    lastName: "TRANSLATION_KEY_MISSING",
  },
  webrtcconfig: "TRANSLATION_KEY_MISSING",
  widgetPicker: {
    instructions: "Press <kbd>Arrows</kbd> from keyboard to change slide <br />\n    Press <kbd>Ctrl</kbd> + <kbd>Arrows</kbd> from keyboard to switch to\n    flat mode",
    instructionsFlat: "Press <kbd>Arrows</kbd> from keyboard to change slide <br />\n    Press <kbd>Ctrl</kbd> + <kbd>Arrows</kbd> from keyboard to switch to\n    flat mode",
    widgets: "Widget",
  },
  widgets: {
    noItems: "There are no widgets in this dashboard",
  },
  wokspaces: {
    body: "TRANSLATION_KEY_MISSING",
    cascadeNotificationConfig: "TRANSLATION_KEY_MISSING",
    cascadeNotificationConfigHint: "TRANSLATION_KEY_MISSING",
    config: "TRANSLATION_KEY_MISSING",
    configurateWorkspaceNotification: "TRANSLATION_KEY_MISSING",
    confirmEmailSender: "TRANSLATION_KEY_MISSING",
    createChildMode: "Create workspace as a sub workspace (must choose parent workspace)",
    createNewWorkspace: "TRANSLATION_KEY_MISSING",
    createSiblingMode: "Create workspace independently, and assign me as owner",
    customizedTemplate: "TRANSLATION_KEY_MISSING",
    disablePublicSignup: "Disable public passports registeration",
    disablePublicSignupHint: "If checked, no one can signup for this passport or its sub-workspaces. Basically, signup screen would be disabled for public",
    editWorkspae: "TRANSLATION_KEY_MISSING",
    emailSendingConfig: "Email Sending Configuration",
    emailSendingConfigHint: "Control how the system emails are being sent, customize the message, etc.",
    emailSendingConfiguration: "TRANSLATION_KEY_MISSING",
    emailSendingConfigurationHint: "TRANSLATION_KEY_MISSING",
    forceEmailConfigToSubWorkspaces: "Force the sub workspaces to use these email configurations",
    forceEmailConfigToSubWorkspacesHint: "By checking this option, all sub workspaces, will be using this configuration, and their admins are not allowed to edit this. Choose this option on products which are running unknown clients in cloud. Do not add personalized content for this workspace in such scenarios",
    forceSubWorkspaceUseConfig: "TRANSLATION_KEY_MISSING",
    forgetPasswordSender: "TRANSLATION_KEY_MISSING",
    generalMailProvider: "General service that sends emails",
    invite: {
      createInvitation: "TRANSLATION_KEY_MISSING",
      editInvitation: "TRANSLATION_KEY_MISSING",
      email: "TRANSLATION_KEY_MISSING",
      emailHint: "TRANSLATION_KEY_MISSING",
      firstName: "TRANSLATION_KEY_MISSING",
      firstNameHint: "TRANSLATION_KEY_MISSING",
      forcePassport: "TRANSLATION_KEY_MISSING",
      lastName: "TRANSLATION_KEY_MISSING",
      lastNameHint: "TRANSLATION_KEY_MISSING",
      name: "Name",
      phoneNumber: "TRANSLATION_KEY_MISSING",
      phoneNumberHint: "TRANSLATION_KEY_MISSING",
      role: "TRANSLATION_KEY_MISSING",
      roleHint: "TRANSLATION_KEY_MISSING",
      roleName: "Role name",
    },
    inviteToWorkspace: "TRANSLATION_KEY_MISSING",
    joinKeyWorkspace: "TRANSLATION_KEY_MISSING",
    joinKeyWorkspaceHint: "TRANSLATION_KEY_MISSING",
    mailServerConfiguration: "TRANSLATION_KEY_MISSING",
    name: "TRANSLATION_KEY_MISSING",
    notification: {
      dialogTitle: "TRANSLATION_KEY_MISSING",
    },
    parentWorkspace: "Parent workspace",
    parentWorkspaceHint: "Select the parent workspace, which the new workspace belongs to",
    publicSignup: "Public user signup & Join Keys",
    publicSignupHint: "This software allows to public users join to this workspace and\n    it's\n    subsequent workspaces, by registering via email, phone number or other\n    types of the passports.\n    In this section you can enable, disable, and make some other\n    configurations.",
    resetToDefault: "TRANSLATION_KEY_MISSING",
    role: "role",
    roleHint: "Select role",
    sender: "TRANSLATION_KEY_MISSING",
    sidetitle: "TRANSLATION_KEY_MISSING",
    slug: "Slug",
    title: "TRANSLATION_KEY_MISSING",
    type: "TRANSLATION_KEY_MISSING",
    workspaceCreationMode: "Workspace creation mode",
    workspaceCreationModeHint: "Workspace creation mode",
    workspaceName: "TRANSLATION_KEY_MISSING",
    workspaceNameHint: "TRANSLATION_KEY_MISSING",
    workspaceTypeSlug: "Slug address",
    workspaceTypeSlugHint: "The path that publicly will be available to users, if they signup through this account this role would be assigned to them.",
    workspaceTypeTitle: "Title",
    workspaceTypeTitleHint: "The title of the Workspace",
  },
};
