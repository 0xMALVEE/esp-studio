/**
 * Fields for entity. Use this when creating forms in React/Angular,
 * instead of giving string to each one, use it from here, so in case of
 * updating any fields you don't loose it.
 */

export const ResumeEntityFields = {
  visibility: "visibility",
  workspaceId: "workspaceId",
  linkerId: "linkerId",
  parentId: "parentId",
  uniqueId: "uniqueId",
  userId: "userId",
  translations: "translations",
  title: "title",
  keySkills: "keySkills",
  videos: "videos",
  preferredPositions: "preferredPositions",
  headline1: "headline1",
  phone: "phone",
  email: "email",
  headline2: "headline2",
  productsListId: "productsListId",
  products: {
    visibility: "products.visibility",
    workspaceId: "products.workspaceId",
    linkerId: "products.linkerId",
    parentId: "products.parentId",
    uniqueId: "products.uniqueId",
    userId: "products.userId",
    translations: "products.translations",
    name: "products.name",
    description: "products.description",
    links: "products.links",
    technologies: "products.technologies",
    rank: "products.rank",
    updated: "products.updated",
    created: "products.created",
    createdFormatted: "products.createdFormatted",
    updatedFormatted: "products.updatedFormatted",
  },
  products$: "products",
  projectsListId: "projectsListId",
  projects: {
    visibility: "projects.visibility",
    workspaceId: "projects.workspaceId",
    linkerId: "projects.linkerId",
    parentId: "projects.parentId",
    uniqueId: "projects.uniqueId",
    userId: "projects.userId",
    translations: "projects.translations",
    title: "projects.title",
    description: "projects.description",
    descriptionExcerpt: "projects.descriptionExcerpt",
    technicalDescription: "projects.technicalDescription",
    technicalDescriptionExcerpt: "projects.technicalDescriptionExcerpt",
    typeId: "projects.typeId",
    type: {
      visibility: "projects.type.visibility",
      workspaceId: "projects.type.workspaceId",
      linkerId: "projects.type.linkerId",
      parentId: "projects.type.parentId",
      uniqueId: "projects.type.uniqueId",
      userId: "projects.type.userId",
      translations: "projects.type.translations",
      name: "projects.type.name",
      rank: "projects.type.rank",
      updated: "projects.type.updated",
      created: "projects.type.created",
      createdFormatted: "projects.type.createdFormatted",
      updatedFormatted: "projects.type.updatedFormatted",
    },
    type$: "type",
    attachmentsListId: "projects.attachmentsListId",
    attachments: "projects.attachments",
    start: "projects.start",
    startFormatted: "projects.startFormatted",
    end: "projects.end",
    endFormatted: "projects.endFormatted",
    workLocationId: "projects.workLocationId",
    workLocation: {
      visibility: "projects.workLocation.visibility",
      workspaceId: "projects.workLocation.workspaceId",
      linkerId: "projects.workLocation.linkerId",
      parentId: "projects.workLocation.parentId",
      uniqueId: "projects.workLocation.uniqueId",
      userId: "projects.workLocation.userId",
      translations: "projects.workLocation.translations",
      status: "projects.workLocation.status",
      flag: "projects.workLocation.flag",
      commonName: "projects.workLocation.commonName",
      officialName: "projects.workLocation.officialName",
      rank: "projects.workLocation.rank",
      updated: "projects.workLocation.updated",
      created: "projects.workLocation.created",
      createdFormatted: "projects.workLocation.createdFormatted",
      updatedFormatted: "projects.workLocation.updatedFormatted",
    },
    workLocation$: "workLocation",
    companyLocationId: "projects.companyLocationId",
    companyLocation: {
      visibility: "projects.companyLocation.visibility",
      workspaceId: "projects.companyLocation.workspaceId",
      linkerId: "projects.companyLocation.linkerId",
      parentId: "projects.companyLocation.parentId",
      uniqueId: "projects.companyLocation.uniqueId",
      userId: "projects.companyLocation.userId",
      translations: "projects.companyLocation.translations",
      status: "projects.companyLocation.status",
      flag: "projects.companyLocation.flag",
      commonName: "projects.companyLocation.commonName",
      officialName: "projects.companyLocation.officialName",
      rank: "projects.companyLocation.rank",
      updated: "projects.companyLocation.updated",
      created: "projects.companyLocation.created",
      createdFormatted: "projects.companyLocation.createdFormatted",
      updatedFormatted: "projects.companyLocation.updatedFormatted",
    },
    companyLocation$: "companyLocation",
    clientLocationId: "projects.clientLocationId",
    clientLocation: {
      visibility: "projects.clientLocation.visibility",
      workspaceId: "projects.clientLocation.workspaceId",
      linkerId: "projects.clientLocation.linkerId",
      parentId: "projects.clientLocation.parentId",
      uniqueId: "projects.clientLocation.uniqueId",
      userId: "projects.clientLocation.userId",
      translations: "projects.clientLocation.translations",
      status: "projects.clientLocation.status",
      flag: "projects.clientLocation.flag",
      commonName: "projects.clientLocation.commonName",
      officialName: "projects.clientLocation.officialName",
      rank: "projects.clientLocation.rank",
      updated: "projects.clientLocation.updated",
      created: "projects.clientLocation.created",
      createdFormatted: "projects.clientLocation.createdFormatted",
      updatedFormatted: "projects.clientLocation.updatedFormatted",
    },
    clientLocation$: "clientLocation",
    links: "projects.links",
    rank: "projects.rank",
    updated: "projects.updated",
    created: "projects.created",
    createdFormatted: "projects.createdFormatted",
    updatedFormatted: "projects.updatedFormatted",
  },
  projects$: "projects",
  companiesListId: "companiesListId",
  companies: {
    visibility: "companies.visibility",
    workspaceId: "companies.workspaceId",
    linkerId: "companies.linkerId",
    parentId: "companies.parentId",
    uniqueId: "companies.uniqueId",
    userId: "companies.userId",
    placeCountryId: "companies.placeCountryId",
    placeCountry: {
      visibility: "companies.placeCountry.visibility",
      workspaceId: "companies.placeCountry.workspaceId",
      linkerId: "companies.placeCountry.linkerId",
      parentId: "companies.placeCountry.parentId",
      uniqueId: "companies.placeCountry.uniqueId",
      userId: "companies.placeCountry.userId",
      translations: "companies.placeCountry.translations",
      status: "companies.placeCountry.status",
      flag: "companies.placeCountry.flag",
      commonName: "companies.placeCountry.commonName",
      officialName: "companies.placeCountry.officialName",
      rank: "companies.placeCountry.rank",
      updated: "companies.placeCountry.updated",
      created: "companies.placeCountry.created",
      createdFormatted: "companies.placeCountry.createdFormatted",
      updatedFormatted: "companies.placeCountry.updatedFormatted",
    },
    placeCountry$: "placeCountry",
    workCountryId: "companies.workCountryId",
    workCountry: {
      visibility: "companies.workCountry.visibility",
      workspaceId: "companies.workCountry.workspaceId",
      linkerId: "companies.workCountry.linkerId",
      parentId: "companies.workCountry.parentId",
      uniqueId: "companies.workCountry.uniqueId",
      userId: "companies.workCountry.userId",
      translations: "companies.workCountry.translations",
      status: "companies.workCountry.status",
      flag: "companies.workCountry.flag",
      commonName: "companies.workCountry.commonName",
      officialName: "companies.workCountry.officialName",
      rank: "companies.workCountry.rank",
      updated: "companies.workCountry.updated",
      created: "companies.workCountry.created",
      createdFormatted: "companies.workCountry.createdFormatted",
      updatedFormatted: "companies.workCountry.updatedFormatted",
    },
    workCountry$: "workCountry",
    mainIndustryId: "companies.mainIndustryId",
    mainIndustry: {
      visibility: "companies.mainIndustry.visibility",
      workspaceId: "companies.mainIndustry.workspaceId",
      linkerId: "companies.mainIndustry.linkerId",
      parentId: "companies.mainIndustry.parentId",
      uniqueId: "companies.mainIndustry.uniqueId",
      userId: "companies.mainIndustry.userId",
      translations: "companies.mainIndustry.translations",
      name: "companies.mainIndustry.name",
      rank: "companies.mainIndustry.rank",
      updated: "companies.mainIndustry.updated",
      created: "companies.mainIndustry.created",
      createdFormatted: "companies.mainIndustry.createdFormatted",
      updatedFormatted: "companies.mainIndustry.updatedFormatted",
    },
    mainIndustry$: "mainIndustry",
    employeeCount: "companies.employeeCount",
    rank: "companies.rank",
    updated: "companies.updated",
    created: "companies.created",
    createdFormatted: "companies.createdFormatted",
    updatedFormatted: "companies.updatedFormatted",
  },
  companies$: "companies",
  servicesListId: "servicesListId",
  services: {
    visibility: "services.visibility",
    workspaceId: "services.workspaceId",
    linkerId: "services.linkerId",
    parentId: "services.parentId",
    uniqueId: "services.uniqueId",
    userId: "services.userId",
    translations: "services.translations",
    name: "services.name",
    description: "services.description",
    rank: "services.rank",
    updated: "services.updated",
    created: "services.created",
    createdFormatted: "services.createdFormatted",
    updatedFormatted: "services.updatedFormatted",
  },
  services$: "services",
  rank: "rank",
  updated: "updated",
  created: "created",
  createdFormatted: "createdFormatted",
  updatedFormatted: "updatedFormatted",
};
