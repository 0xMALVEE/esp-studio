/**
 * Fields for entity. Use this when creating forms in React/Angular,
 * instead of giving string to each one, use it from here, so in case of
 * updating any fields you don't loose it.
 */

export const ExamEntityFields = {
  visibility: "visibility",
  workspaceId: "workspaceId",
  linkerId: "linkerId",
  parentId: "parentId",
  uniqueId: "uniqueId",
  userId: "userId",
  format: "format",
  title: "title",
  titleExcerpt: "titleExcerpt",
  revision: "revision",
  description: "description",
  descriptionExcerpt: "descriptionExcerpt",
  sectionsListId: "sectionsListId",
  sections: {
    visibility: "sections.visibility",
    workspaceId: "sections.workspaceId",
    linkerId: "sections.linkerId",
    parentId: "sections.parentId",
    uniqueId: "sections.uniqueId",
    userId: "sections.userId",
    format: "sections.format",
    title: "sections.title",
    header: "sections.header",
    headerExcerpt: "sections.headerExcerpt",
    uniqueGroupIdentifier: "sections.uniqueGroupIdentifier",
    attachmentsListId: "sections.attachmentsListId",
    attachments: "sections.attachments",
    tasksListId: "sections.tasksListId",
    tasks: {
      visibility: "sections.tasks.visibility",
      workspaceId: "sections.tasks.workspaceId",
      linkerId: "sections.tasks.linkerId",
      parentId: "sections.tasks.parentId",
      uniqueId: "sections.tasks.uniqueId",
      userId: "sections.tasks.userId",
      format: "sections.tasks.format",
      title: "sections.tasks.title",
      content: "sections.tasks.content",
      contentExcerpt: "sections.tasks.contentExcerpt",
      instruction: "sections.tasks.instruction",
      questionsListId: "sections.tasks.questionsListId",
      questions: {
        visibility: "sections.tasks.questions.visibility",
        workspaceId: "sections.tasks.questions.workspaceId",
        linkerId: "sections.tasks.questions.linkerId",
        parentId: "sections.tasks.questions.parentId",
        uniqueId: "sections.tasks.questions.uniqueId",
        userId: "sections.tasks.questions.userId",
        bankId: "sections.tasks.questions.bankId",
        bank: {
          visibility: "sections.tasks.questions.bank.visibility",
          workspaceId: "sections.tasks.questions.bank.workspaceId",
          linkerId: "sections.tasks.questions.bank.linkerId",
          parentId: "sections.tasks.questions.bank.parentId",
          uniqueId: "sections.tasks.questions.bank.uniqueId",
          userId: "sections.tasks.questions.bank.userId",
          translations: "sections.tasks.questions.bank.translations",
          title: "sections.tasks.questions.bank.title",
          rank: "sections.tasks.questions.bank.rank",
          updated: "sections.tasks.questions.bank.updated",
          created: "sections.tasks.questions.bank.created",
          createdFormatted: "sections.tasks.questions.bank.createdFormatted",
          updatedFormatted: "sections.tasks.questions.bank.updatedFormatted",
        },
        bank$: "bank",
        wordCount: "sections.tasks.questions.wordCount",
        isPreview: "sections.tasks.questions.isPreview",
        durationInSeconds: "sections.tasks.questions.durationInSeconds",
        isCorrect: "sections.tasks.questions.isCorrect",
        title: "sections.tasks.questions.title",
        titleExcerpt: "sections.tasks.questions.titleExcerpt",
        body: "sections.tasks.questions.body",
        bodyExcerpt: "sections.tasks.questions.bodyExcerpt",
        provincesListId: "sections.tasks.questions.provincesListId",
        provinces: {
          visibility: "sections.tasks.questions.provinces.visibility",
          workspaceId: "sections.tasks.questions.provinces.workspaceId",
          linkerId: "sections.tasks.questions.provinces.linkerId",
          parentId: "sections.tasks.questions.provinces.parentId",
          uniqueId: "sections.tasks.questions.provinces.uniqueId",
          userId: "sections.tasks.questions.provinces.userId",
          translations: "sections.tasks.questions.provinces.translations",
          name: "sections.tasks.questions.provinces.name",
          countryId: "sections.tasks.questions.provinces.countryId",
          country: {
            visibility: "sections.tasks.questions.provinces.country.visibility",
            workspaceId:
              "sections.tasks.questions.provinces.country.workspaceId",
            linkerId: "sections.tasks.questions.provinces.country.linkerId",
            parentId: "sections.tasks.questions.provinces.country.parentId",
            uniqueId: "sections.tasks.questions.provinces.country.uniqueId",
            userId: "sections.tasks.questions.provinces.country.userId",
            translations:
              "sections.tasks.questions.provinces.country.translations",
            status: "sections.tasks.questions.provinces.country.status",
            flag: "sections.tasks.questions.provinces.country.flag",
            commonName: "sections.tasks.questions.provinces.country.commonName",
            officialName:
              "sections.tasks.questions.provinces.country.officialName",
            rank: "sections.tasks.questions.provinces.country.rank",
            updated: "sections.tasks.questions.provinces.country.updated",
            created: "sections.tasks.questions.provinces.country.created",
            createdFormatted:
              "sections.tasks.questions.provinces.country.createdFormatted",
            updatedFormatted:
              "sections.tasks.questions.provinces.country.updatedFormatted",
          },
          country$: "country",
          rank: "sections.tasks.questions.provinces.rank",
          updated: "sections.tasks.questions.provinces.updated",
          created: "sections.tasks.questions.provinces.created",
          createdFormatted:
            "sections.tasks.questions.provinces.createdFormatted",
          updatedFormatted:
            "sections.tasks.questions.provinces.updatedFormatted",
        },
        provinces$: "provinces",
        questionLevelId: "sections.tasks.questions.questionLevelId",
        questionLevel: {
          visibility: "sections.tasks.questions.questionLevel.visibility",
          workspaceId: "sections.tasks.questions.questionLevel.workspaceId",
          linkerId: "sections.tasks.questions.questionLevel.linkerId",
          parentId: "sections.tasks.questions.questionLevel.parentId",
          uniqueId: "sections.tasks.questions.questionLevel.uniqueId",
          userId: "sections.tasks.questions.questionLevel.userId",
          translations: "sections.tasks.questions.questionLevel.translations",
          name: "sections.tasks.questions.questionLevel.name",
          rank: "sections.tasks.questions.questionLevel.rank",
          updated: "sections.tasks.questions.questionLevel.updated",
          created: "sections.tasks.questions.questionLevel.created",
          createdFormatted:
            "sections.tasks.questions.questionLevel.createdFormatted",
          updatedFormatted:
            "sections.tasks.questions.questionLevel.updatedFormatted",
        },
        questionLevel$: "questionLevel",
        studyYearId: "sections.tasks.questions.studyYearId",
        studyYear: {
          visibility: "sections.tasks.questions.studyYear.visibility",
          workspaceId: "sections.tasks.questions.studyYear.workspaceId",
          linkerId: "sections.tasks.questions.studyYear.linkerId",
          parentId: "sections.tasks.questions.studyYear.parentId",
          uniqueId: "sections.tasks.questions.studyYear.uniqueId",
          userId: "sections.tasks.questions.studyYear.userId",
          translations: "sections.tasks.questions.studyYear.translations",
          name: "sections.tasks.questions.studyYear.name",
          rank: "sections.tasks.questions.studyYear.rank",
          updated: "sections.tasks.questions.studyYear.updated",
          created: "sections.tasks.questions.studyYear.created",
          createdFormatted:
            "sections.tasks.questions.studyYear.createdFormatted",
          updatedFormatted:
            "sections.tasks.questions.studyYear.updatedFormatted",
        },
        studyYear$: "studyYear",
        schoolTypeId: "sections.tasks.questions.schoolTypeId",
        schoolType: {
          visibility: "sections.tasks.questions.schoolType.visibility",
          workspaceId: "sections.tasks.questions.schoolType.workspaceId",
          linkerId: "sections.tasks.questions.schoolType.linkerId",
          parentId: "sections.tasks.questions.schoolType.parentId",
          uniqueId: "sections.tasks.questions.schoolType.uniqueId",
          userId: "sections.tasks.questions.schoolType.userId",
          translations: "sections.tasks.questions.schoolType.translations",
          name: "sections.tasks.questions.schoolType.name",
          rank: "sections.tasks.questions.schoolType.rank",
          updated: "sections.tasks.questions.schoolType.updated",
          created: "sections.tasks.questions.schoolType.created",
          createdFormatted:
            "sections.tasks.questions.schoolType.createdFormatted",
          updatedFormatted:
            "sections.tasks.questions.schoolType.updatedFormatted",
        },
        schoolType$: "schoolType",
        questionSemesterId: "sections.tasks.questions.questionSemesterId",
        questionSemester: {
          visibility: "sections.tasks.questions.questionSemester.visibility",
          workspaceId: "sections.tasks.questions.questionSemester.workspaceId",
          linkerId: "sections.tasks.questions.questionSemester.linkerId",
          parentId: "sections.tasks.questions.questionSemester.parentId",
          uniqueId: "sections.tasks.questions.questionSemester.uniqueId",
          userId: "sections.tasks.questions.questionSemester.userId",
          translations:
            "sections.tasks.questions.questionSemester.translations",
          name: "sections.tasks.questions.questionSemester.name",
          rank: "sections.tasks.questions.questionSemester.rank",
          updated: "sections.tasks.questions.questionSemester.updated",
          created: "sections.tasks.questions.questionSemester.created",
          createdFormatted:
            "sections.tasks.questions.questionSemester.createdFormatted",
          updatedFormatted:
            "sections.tasks.questions.questionSemester.updatedFormatted",
        },
        questionSemester$: "questionSemester",
        questionDifficulityLevelId:
          "sections.tasks.questions.questionDifficulityLevelId",
        questionDifficulityLevel: {
          visibility:
            "sections.tasks.questions.questionDifficulityLevel.visibility",
          workspaceId:
            "sections.tasks.questions.questionDifficulityLevel.workspaceId",
          linkerId:
            "sections.tasks.questions.questionDifficulityLevel.linkerId",
          parentId:
            "sections.tasks.questions.questionDifficulityLevel.parentId",
          uniqueId:
            "sections.tasks.questions.questionDifficulityLevel.uniqueId",
          userId: "sections.tasks.questions.questionDifficulityLevel.userId",
          translations:
            "sections.tasks.questions.questionDifficulityLevel.translations",
          name: "sections.tasks.questions.questionDifficulityLevel.name",
          rank: "sections.tasks.questions.questionDifficulityLevel.rank",
          updated: "sections.tasks.questions.questionDifficulityLevel.updated",
          created: "sections.tasks.questions.questionDifficulityLevel.created",
          createdFormatted:
            "sections.tasks.questions.questionDifficulityLevel.createdFormatted",
          updatedFormatted:
            "sections.tasks.questions.questionDifficulityLevel.updatedFormatted",
        },
        questionDifficulityLevel$: "questionDifficulityLevel",
        choices: "sections.tasks.questions.choices",
        rank: "sections.tasks.questions.rank",
        updated: "sections.tasks.questions.updated",
        created: "sections.tasks.questions.created",
        createdFormatted: "sections.tasks.questions.createdFormatted",
        updatedFormatted: "sections.tasks.questions.updatedFormatted",
      },
      questions$: "questions",
      rank: "sections.tasks.rank",
      updated: "sections.tasks.updated",
      created: "sections.tasks.created",
      createdFormatted: "sections.tasks.createdFormatted",
      updatedFormatted: "sections.tasks.updatedFormatted",
    },
    tasks$: "tasks",
    rank: "sections.rank",
    updated: "sections.updated",
    created: "sections.created",
    createdFormatted: "sections.createdFormatted",
    updatedFormatted: "sections.updatedFormatted",
  },
  sections$: "sections",
  attachmentsListId: "attachmentsListId",
  attachments: "attachments",
  rank: "rank",
  updated: "updated",
  created: "created",
  createdFormatted: "createdFormatted",
  updatedFormatted: "updatedFormatted",
};
