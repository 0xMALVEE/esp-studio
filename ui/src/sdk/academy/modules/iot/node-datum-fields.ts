/**
 * Fields for entity. Use this when creating forms in React/Angular,
 * instead of giving string to each one, use it from here, so in case of
 * updating any fields you don't loose it.
 */

export const NodeDatumEntityFields = {
  visibility: "visibility",
  workspaceId: "workspaceId",
  linkerId: "linkerId",
  parentId: "parentId",
  uniqueId: "uniqueId",
  userId: "userId",
  nodeId: "nodeId",
  node: {
    visibility: "node.visibility",
    workspaceId: "node.workspaceId",
    linkerId: "node.linkerId",
    parentId: "node.parentId",
    uniqueId: "node.uniqueId",
    userId: "node.userId",
    name: "node.name",
    value: "node.value",
    typeId: "node.typeId",
    type: {
      visibility: "node.type.visibility",
      workspaceId: "node.type.workspaceId",
      linkerId: "node.type.linkerId",
      parentId: "node.type.parentId",
      uniqueId: "node.type.uniqueId",
      userId: "node.type.userId",
      name: "node.type.name",
      rank: "node.type.rank",
      updated: "node.type.updated",
      created: "node.type.created",
      createdFormatted: "node.type.createdFormatted",
      updatedFormatted: "node.type.updatedFormatted",
    },
    type$: "type",
    modeId: "node.modeId",
    mode: {
      visibility: "node.mode.visibility",
      workspaceId: "node.mode.workspaceId",
      linkerId: "node.mode.linkerId",
      parentId: "node.mode.parentId",
      uniqueId: "node.mode.uniqueId",
      userId: "node.mode.userId",
      name: "node.mode.name",
      rank: "node.mode.rank",
      updated: "node.mode.updated",
      created: "node.mode.created",
      createdFormatted: "node.mode.createdFormatted",
      updatedFormatted: "node.mode.updatedFormatted",
    },
    mode$: "mode",
    readers: "node.readers",
    writers: "node.writers",
    rank: "node.rank",
    updated: "node.updated",
    created: "node.created",
    createdFormatted: "node.createdFormatted",
    updatedFormatted: "node.updatedFormatted",
  },
  node$: "node",
  valueFloat64: "valueFloat64",
  valueInt64: "valueInt64",
  valueString: "valueString",
  valueBoolean: "valueBoolean",
  ingestedAt: "ingestedAt",
  ingestedAtFormatted: "ingestedAtFormatted",
  rank: "rank",
  updated: "updated",
  created: "created",
  createdFormatted: "createdFormatted",
  updatedFormatted: "updatedFormatted",
};
